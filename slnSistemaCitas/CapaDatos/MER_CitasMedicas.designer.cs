#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbSistemaCitas")]
	public partial class MER_CitasMedicasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertTblDoctor(TblDoctor instance);
    partial void UpdateTblDoctor(TblDoctor instance);
    partial void DeleteTblDoctor(TblDoctor instance);
    partial void InsertTblDoctorHora(TblDoctorHora instance);
    partial void UpdateTblDoctorHora(TblDoctorHora instance);
    partial void DeleteTblDoctorHora(TblDoctorHora instance);
    partial void InsertTblCita(TblCita instance);
    partial void UpdateTblCita(TblCita instance);
    partial void DeleteTblCita(TblCita instance);
    partial void InsertTblHora(TblHora instance);
    partial void UpdateTblHora(TblHora instance);
    partial void DeleteTblHora(TblHora instance);
    #endregion
		
		public MER_CitasMedicasDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.dbSistemaCitasConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MER_CitasMedicasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MER_CitasMedicasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MER_CitasMedicasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MER_CitasMedicasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TblDoctor> TblDoctor
		{
			get
			{
				return this.GetTable<TblDoctor>();
			}
		}
		
		public System.Data.Linq.Table<TblDoctorHora> TblDoctorHora
		{
			get
			{
				return this.GetTable<TblDoctorHora>();
			}
		}
		
		public System.Data.Linq.Table<TblCita> TblCita
		{
			get
			{
				return this.GetTable<TblCita>();
			}
		}
		
		public System.Data.Linq.Table<TblHora> TblHora
		{
			get
			{
				return this.GetTable<TblHora>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblDoctor")]
	public partial class TblDoctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idCedula;
		
		private string _nomDoctor;
		
		private string _apeDoctor;
		
		private char _genDoctor;
		
		private System.DateTime _fechaN_Doctor;
		
		private string _celDoctor;
		
		private string _estDoctor;
		
		private int _idHospital;
		
		private int _idEspecialidad;
		
		private EntitySet<TblDoctorHora> _TblDoctorHora;
		
		private EntitySet<TblCita> _TblCita;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCedulaChanging(string value);
    partial void OnidCedulaChanged();
    partial void OnnomDoctorChanging(string value);
    partial void OnnomDoctorChanged();
    partial void OnapeDoctorChanging(string value);
    partial void OnapeDoctorChanged();
    partial void OngenDoctorChanging(char value);
    partial void OngenDoctorChanged();
    partial void OnfechaN_DoctorChanging(System.DateTime value);
    partial void OnfechaN_DoctorChanged();
    partial void OncelDoctorChanging(string value);
    partial void OncelDoctorChanged();
    partial void OnestDoctorChanging(string value);
    partial void OnestDoctorChanged();
    partial void OnidHospitalChanging(int value);
    partial void OnidHospitalChanged();
    partial void OnidEspecialidadChanging(int value);
    partial void OnidEspecialidadChanged();
    #endregion
		
		public TblDoctor()
		{
			this._TblDoctorHora = new EntitySet<TblDoctorHora>(new Action<TblDoctorHora>(this.attach_TblDoctorHora), new Action<TblDoctorHora>(this.detach_TblDoctorHora));
			this._TblCita = new EntitySet<TblCita>(new Action<TblCita>(this.attach_TblCita), new Action<TblCita>(this.detach_TblCita));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCedula", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idCedula
		{
			get
			{
				return this._idCedula;
			}
			set
			{
				if ((this._idCedula != value))
				{
					this.OnidCedulaChanging(value);
					this.SendPropertyChanging();
					this._idCedula = value;
					this.SendPropertyChanged("idCedula");
					this.OnidCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomDoctor", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nomDoctor
		{
			get
			{
				return this._nomDoctor;
			}
			set
			{
				if ((this._nomDoctor != value))
				{
					this.OnnomDoctorChanging(value);
					this.SendPropertyChanging();
					this._nomDoctor = value;
					this.SendPropertyChanged("nomDoctor");
					this.OnnomDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apeDoctor", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string apeDoctor
		{
			get
			{
				return this._apeDoctor;
			}
			set
			{
				if ((this._apeDoctor != value))
				{
					this.OnapeDoctorChanging(value);
					this.SendPropertyChanging();
					this._apeDoctor = value;
					this.SendPropertyChanged("apeDoctor");
					this.OnapeDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genDoctor", DbType="Char(1) NOT NULL")]
		public char genDoctor
		{
			get
			{
				return this._genDoctor;
			}
			set
			{
				if ((this._genDoctor != value))
				{
					this.OngenDoctorChanging(value);
					this.SendPropertyChanging();
					this._genDoctor = value;
					this.SendPropertyChanged("genDoctor");
					this.OngenDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaN_Doctor", DbType="DateTime NOT NULL")]
		public System.DateTime fechaN_Doctor
		{
			get
			{
				return this._fechaN_Doctor;
			}
			set
			{
				if ((this._fechaN_Doctor != value))
				{
					this.OnfechaN_DoctorChanging(value);
					this.SendPropertyChanging();
					this._fechaN_Doctor = value;
					this.SendPropertyChanged("fechaN_Doctor");
					this.OnfechaN_DoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celDoctor", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string celDoctor
		{
			get
			{
				return this._celDoctor;
			}
			set
			{
				if ((this._celDoctor != value))
				{
					this.OncelDoctorChanging(value);
					this.SendPropertyChanging();
					this._celDoctor = value;
					this.SendPropertyChanged("celDoctor");
					this.OncelDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estDoctor", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string estDoctor
		{
			get
			{
				return this._estDoctor;
			}
			set
			{
				if ((this._estDoctor != value))
				{
					this.OnestDoctorChanging(value);
					this.SendPropertyChanging();
					this._estDoctor = value;
					this.SendPropertyChanged("estDoctor");
					this.OnestDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHospital", DbType="Int NOT NULL")]
		public int idHospital
		{
			get
			{
				return this._idHospital;
			}
			set
			{
				if ((this._idHospital != value))
				{
					this.OnidHospitalChanging(value);
					this.SendPropertyChanging();
					this._idHospital = value;
					this.SendPropertyChanged("idHospital");
					this.OnidHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEspecialidad", DbType="Int NOT NULL")]
		public int idEspecialidad
		{
			get
			{
				return this._idEspecialidad;
			}
			set
			{
				if ((this._idEspecialidad != value))
				{
					this.OnidEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._idEspecialidad = value;
					this.SendPropertyChanged("idEspecialidad");
					this.OnidEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDoctor_TblDoctorHora", Storage="_TblDoctorHora", ThisKey="idCedula", OtherKey="idDoctor")]
		public EntitySet<TblDoctorHora> TblDoctorHora
		{
			get
			{
				return this._TblDoctorHora;
			}
			set
			{
				this._TblDoctorHora.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDoctor_TblCita", Storage="_TblCita", ThisKey="idCedula", OtherKey="idDoctor")]
		public EntitySet<TblCita> TblCita
		{
			get
			{
				return this._TblCita;
			}
			set
			{
				this._TblCita.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblDoctorHora(TblDoctorHora entity)
		{
			this.SendPropertyChanging();
			entity.TblDoctor = this;
		}
		
		private void detach_TblDoctorHora(TblDoctorHora entity)
		{
			this.SendPropertyChanging();
			entity.TblDoctor = null;
		}
		
		private void attach_TblCita(TblCita entity)
		{
			this.SendPropertyChanging();
			entity.TblDoctor = this;
		}
		
		private void detach_TblCita(TblCita entity)
		{
			this.SendPropertyChanging();
			entity.TblDoctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblDoctorHora")]
	public partial class TblDoctorHora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDoctorHora;
		
		private string _idDoctor;
		
		private int _idHora;
		
		private EntityRef<TblDoctor> _TblDoctor;
		
		private EntityRef<TblHora> _TblHora;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDoctorHoraChanging(int value);
    partial void OnidDoctorHoraChanged();
    partial void OnidDoctorChanging(string value);
    partial void OnidDoctorChanged();
    partial void OnidHoraChanging(int value);
    partial void OnidHoraChanged();
    #endregion
		
		public TblDoctorHora()
		{
			this._TblDoctor = default(EntityRef<TblDoctor>);
			this._TblHora = default(EntityRef<TblHora>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDoctorHora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDoctorHora
		{
			get
			{
				return this._idDoctorHora;
			}
			set
			{
				if ((this._idDoctorHora != value))
				{
					this.OnidDoctorHoraChanging(value);
					this.SendPropertyChanging();
					this._idDoctorHora = value;
					this.SendPropertyChanged("idDoctorHora");
					this.OnidDoctorHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDoctor", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string idDoctor
		{
			get
			{
				return this._idDoctor;
			}
			set
			{
				if ((this._idDoctor != value))
				{
					if (this._TblDoctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDoctorChanging(value);
					this.SendPropertyChanging();
					this._idDoctor = value;
					this.SendPropertyChanged("idDoctor");
					this.OnidDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHora", DbType="Int NOT NULL")]
		public int idHora
		{
			get
			{
				return this._idHora;
			}
			set
			{
				if ((this._idHora != value))
				{
					if (this._TblHora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidHoraChanging(value);
					this.SendPropertyChanging();
					this._idHora = value;
					this.SendPropertyChanged("idHora");
					this.OnidHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDoctor_TblDoctorHora", Storage="_TblDoctor", ThisKey="idDoctor", OtherKey="idCedula", IsForeignKey=true)]
		public TblDoctor TblDoctor
		{
			get
			{
				return this._TblDoctor.Entity;
			}
			set
			{
				TblDoctor previousValue = this._TblDoctor.Entity;
				if (((previousValue != value) 
							|| (this._TblDoctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblDoctor.Entity = null;
						previousValue.TblDoctorHora.Remove(this);
					}
					this._TblDoctor.Entity = value;
					if ((value != null))
					{
						value.TblDoctorHora.Add(this);
						this._idDoctor = value.idCedula;
					}
					else
					{
						this._idDoctor = default(string);
					}
					this.SendPropertyChanged("TblDoctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblHora_TblDoctorHora", Storage="_TblHora", ThisKey="idHora", OtherKey="idHora", IsForeignKey=true)]
		public TblHora TblHora
		{
			get
			{
				return this._TblHora.Entity;
			}
			set
			{
				TblHora previousValue = this._TblHora.Entity;
				if (((previousValue != value) 
							|| (this._TblHora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblHora.Entity = null;
						previousValue.TblDoctorHora.Remove(this);
					}
					this._TblHora.Entity = value;
					if ((value != null))
					{
						value.TblDoctorHora.Add(this);
						this._idHora = value.idHora;
					}
					else
					{
						this._idHora = default(int);
					}
					this.SendPropertyChanged("TblHora");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCita")]
	public partial class TblCita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCita;
		
		private System.Nullable<System.DateTime> _fechaCita;
		
		private string _estCita;
		
		private int _idHora;
		
		private string _idUsuario;
		
		private string _idDoctor;
		
		private EntityRef<TblDoctor> _TblDoctor;
		
		private EntityRef<TblHora> _TblHora;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCitaChanging(int value);
    partial void OnidCitaChanged();
    partial void OnfechaCitaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaCitaChanged();
    partial void OnestCitaChanging(string value);
    partial void OnestCitaChanged();
    partial void OnidHoraChanging(int value);
    partial void OnidHoraChanged();
    partial void OnidUsuarioChanging(string value);
    partial void OnidUsuarioChanged();
    partial void OnidDoctorChanging(string value);
    partial void OnidDoctorChanged();
    #endregion
		
		public TblCita()
		{
			this._TblDoctor = default(EntityRef<TblDoctor>);
			this._TblHora = default(EntityRef<TblHora>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCita", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCita
		{
			get
			{
				return this._idCita;
			}
			set
			{
				if ((this._idCita != value))
				{
					this.OnidCitaChanging(value);
					this.SendPropertyChanging();
					this._idCita = value;
					this.SendPropertyChanged("idCita");
					this.OnidCitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaCita", DbType="DateTime")]
		public System.Nullable<System.DateTime> fechaCita
		{
			get
			{
				return this._fechaCita;
			}
			set
			{
				if ((this._fechaCita != value))
				{
					this.OnfechaCitaChanging(value);
					this.SendPropertyChanging();
					this._fechaCita = value;
					this.SendPropertyChanged("fechaCita");
					this.OnfechaCitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estCita", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string estCita
		{
			get
			{
				return this._estCita;
			}
			set
			{
				if ((this._estCita != value))
				{
					this.OnestCitaChanging(value);
					this.SendPropertyChanging();
					this._estCita = value;
					this.SendPropertyChanged("estCita");
					this.OnestCitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHora", DbType="Int NOT NULL")]
		public int idHora
		{
			get
			{
				return this._idHora;
			}
			set
			{
				if ((this._idHora != value))
				{
					if (this._TblHora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidHoraChanging(value);
					this.SendPropertyChanging();
					this._idHora = value;
					this.SendPropertyChanged("idHora");
					this.OnidHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDoctor", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string idDoctor
		{
			get
			{
				return this._idDoctor;
			}
			set
			{
				if ((this._idDoctor != value))
				{
					if (this._TblDoctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDoctorChanging(value);
					this.SendPropertyChanging();
					this._idDoctor = value;
					this.SendPropertyChanged("idDoctor");
					this.OnidDoctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDoctor_TblCita", Storage="_TblDoctor", ThisKey="idDoctor", OtherKey="idCedula", IsForeignKey=true)]
		public TblDoctor TblDoctor
		{
			get
			{
				return this._TblDoctor.Entity;
			}
			set
			{
				TblDoctor previousValue = this._TblDoctor.Entity;
				if (((previousValue != value) 
							|| (this._TblDoctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblDoctor.Entity = null;
						previousValue.TblCita.Remove(this);
					}
					this._TblDoctor.Entity = value;
					if ((value != null))
					{
						value.TblCita.Add(this);
						this._idDoctor = value.idCedula;
					}
					else
					{
						this._idDoctor = default(string);
					}
					this.SendPropertyChanged("TblDoctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblHora_TblCita", Storage="_TblHora", ThisKey="idHora", OtherKey="idHora", IsForeignKey=true)]
		public TblHora TblHora
		{
			get
			{
				return this._TblHora.Entity;
			}
			set
			{
				TblHora previousValue = this._TblHora.Entity;
				if (((previousValue != value) 
							|| (this._TblHora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblHora.Entity = null;
						previousValue.TblCita.Remove(this);
					}
					this._TblHora.Entity = value;
					if ((value != null))
					{
						value.TblCita.Add(this);
						this._idHora = value.idHora;
					}
					else
					{
						this._idHora = default(int);
					}
					this.SendPropertyChanged("TblHora");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblHora")]
	public partial class TblHora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idHora;
		
		private string _hora;
		
		private string _estHora;
		
		private EntitySet<TblDoctorHora> _TblDoctorHora;
		
		private EntitySet<TblCita> _TblCita;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidHoraChanging(int value);
    partial void OnidHoraChanged();
    partial void OnhoraChanging(string value);
    partial void OnhoraChanged();
    partial void OnestHoraChanging(string value);
    partial void OnestHoraChanged();
    #endregion
		
		public TblHora()
		{
			this._TblDoctorHora = new EntitySet<TblDoctorHora>(new Action<TblDoctorHora>(this.attach_TblDoctorHora), new Action<TblDoctorHora>(this.detach_TblDoctorHora));
			this._TblCita = new EntitySet<TblCita>(new Action<TblCita>(this.attach_TblCita), new Action<TblCita>(this.detach_TblCita));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idHora
		{
			get
			{
				return this._idHora;
			}
			set
			{
				if ((this._idHora != value))
				{
					this.OnidHoraChanging(value);
					this.SendPropertyChanging();
					this._idHora = value;
					this.SendPropertyChanged("idHora");
					this.OnidHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string hora
		{
			get
			{
				return this._hora;
			}
			set
			{
				if ((this._hora != value))
				{
					this.OnhoraChanging(value);
					this.SendPropertyChanging();
					this._hora = value;
					this.SendPropertyChanged("hora");
					this.OnhoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estHora", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string estHora
		{
			get
			{
				return this._estHora;
			}
			set
			{
				if ((this._estHora != value))
				{
					this.OnestHoraChanging(value);
					this.SendPropertyChanging();
					this._estHora = value;
					this.SendPropertyChanged("estHora");
					this.OnestHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblHora_TblDoctorHora", Storage="_TblDoctorHora", ThisKey="idHora", OtherKey="idHora")]
		public EntitySet<TblDoctorHora> TblDoctorHora
		{
			get
			{
				return this._TblDoctorHora;
			}
			set
			{
				this._TblDoctorHora.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblHora_TblCita", Storage="_TblCita", ThisKey="idHora", OtherKey="idHora")]
		public EntitySet<TblCita> TblCita
		{
			get
			{
				return this._TblCita;
			}
			set
			{
				this._TblCita.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblDoctorHora(TblDoctorHora entity)
		{
			this.SendPropertyChanging();
			entity.TblHora = this;
		}
		
		private void detach_TblDoctorHora(TblDoctorHora entity)
		{
			this.SendPropertyChanging();
			entity.TblHora = null;
		}
		
		private void attach_TblCita(TblCita entity)
		{
			this.SendPropertyChanging();
			entity.TblHora = this;
		}
		
		private void detach_TblCita(TblCita entity)
		{
			this.SendPropertyChanging();
			entity.TblHora = null;
		}
	}
}
#pragma warning restore 1591
